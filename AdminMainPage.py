# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AdminMainPage.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow
from Admin_Edit_clients import UsersDialog
from Admin_analytic import Analytic_Dialog
from Admin_Report import ReportDialog
from Admin_edit_movie import admin_Movie_Dialog
from PyQt5.QtGui import QIcon

class Admin_Main_Page(QMainWindow):
    def __init__(self):
        super().__init__()
        self.ui = Ui_AdminMainWindow()
        self.ui.setupUi(self)
        self.setFixedSize(536, 372)
        self.setWindowIcon(QIcon("taran.png"))
        # Привязка кнопок к функциям
        self.ui.editclientsButton.clicked.connect(self.open_clients_edit)
        self.ui.analyticButton.clicked.connect(self.open_analytic)
        self.ui.reportButton.clicked.connect(self.open_report)
        self.ui.editmovieButton.clicked.connect(self.open_movie)
        self.ui.refreshButton.clicked.connect(self.refresh_window)  # Привязка кнопки Refresh
        self.ui.logoutButton.clicked.connect(self.open_login)
        # Переменные для окон
        self.edit_clients_instance = None
        self.analytic_window = None
        self.report_window_instance = None
        self.movie_window_instance = None
        self.login_windwo = None
    def open_login(self):
        from loginWindow import Dialog_Login
        if self.login_windwo == None:
            self.login_windwo = Dialog_Login()
        self.close()
        self.login_windwo.show()

    def open_movie(self):
        if self.movie_window_instance is None:
            self.movie_window_instance = admin_Movie_Dialog()
        self.movie_window_instance.show()

    def open_report(self):
        if self.report_window_instance is None:
            self.report_window_instance = ReportDialog()
        self.report_window_instance.show()

    def open_analytic(self):
        if self.analytic_window is None:
            self.analytic_window = Analytic_Dialog()
        self.analytic_window.show()

    def open_clients_edit(self):
        if self.edit_clients_instance is None:
            self.edit_clients_instance = UsersDialog()
        self.edit_clients_instance.show()

    def refresh_window(self):
        # Закрываем дочерние окна
        if self.edit_clients_instance:
            self.edit_clients_instance.close()
            self.edit_clients_instance = None

        if self.analytic_window:
            self.analytic_window.close()
            self.analytic_window = None

        if self.report_window_instance:
            self.report_window_instance.close()
            self.report_window_instance = None

        if self.movie_window_instance:
            self.movie_window_instance.close()
            self.movie_window_instance = None

        # Пример обновления интерфейса
        current_text = self.ui.admin_name_label.text()
        self.ui.admin_name_label.setText(current_text)
class Ui_AdminMainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(536, 372)
        MainWindow.setStyleSheet("QMainWindow {\n"
"    background-color: rgba(0, 0, 0, 0.6);  /* Темный полупрозрачный фон */\n"
"    background-image: url(\"C:/Users/user/Desktop/CinemaApp/images/back.jpg\");  /* Путь к изображению */\n"
"    background-repeat: no-repeat;\n"
"    background-position: center;\n"
"    background-size: cover;  /* Чтобы изображение заполняло весь контейнер */\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # Кнопка EDIT CLIENTS
        self.editclientsButton = QtWidgets.QPushButton(self.centralwidget)
        self.editclientsButton.setGeometry(QtCore.QRect(72, 200, 151, 51))
        self.editclientsButton.setStyleSheet("QPushButton {\n"
"    background-color: #E53F3F; /* Цвет кнопки */\n"
"    font-family: \'Alumni Sans\'; /* Шрифт Alumni Sans */\n"
"    font-weight: bold; /* Жирный текст */\n"
"    font-size: 16px; /* Размер текста */\n"
"    color: white; /* Белый цвет текста */\n"
"    border-radius: 3px; /* Скругленные углы */\n"
"    padding: 6px 12px; /* Отступы внутри кнопки */\n"
"    transition: background-color 0.3s ease; /* Плавный переход при наведении */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: #D53939; /* Более темный оттенок при наведении */\n"
"}\n"
"")
        self.editclientsButton.setObjectName("editclientsButton")
        
        # Главный заголовок
        self.mainpage_label = QtWidgets.QLabel(self.centralwidget)
        self.mainpage_label.setGeometry(QtCore.QRect(170, 20, 191, 41))
        self.mainpage_label.setStyleSheet("QLabel {\n"
"    font-family: \'Alumni Sans\';\n"
"    font-weight: bold; /* Для жирного начертания */\n"
"    font-size: 32px; /* Размер h1 примерно 32px */\n"
"    color: white; /* Белый цвет текста */\n"
"}\n"
"")
        self.mainpage_label.setObjectName("mainpage_label")
        
        # Кнопка ANALYTIC
        self.analyticButton = QtWidgets.QPushButton(self.centralwidget)
        self.analyticButton.setGeometry(QtCore.QRect(300, 110, 151, 51))
        self.analyticButton.setStyleSheet(self.editclientsButton.styleSheet())
        self.analyticButton.setObjectName("analyticButton")
        
        # Кнопка EDIT MOVIE
        self.editmovieButton = QtWidgets.QPushButton(self.centralwidget)
        self.editmovieButton.setGeometry(QtCore.QRect(300, 200, 151, 51))
        self.editmovieButton.setStyleSheet(self.editclientsButton.styleSheet())
        self.editmovieButton.setObjectName("editmovieButton")
        
        # Кнопка REPORT
        self.reportButton = QtWidgets.QPushButton(self.centralwidget)
        self.reportButton.setGeometry(QtCore.QRect(70, 110, 151, 51))
        self.reportButton.setStyleSheet(self.editclientsButton.styleSheet())
        self.reportButton.setObjectName("reportButton")
        
        # Метка admin
        self.admin_name_label = QtWidgets.QLabel(self.centralwidget)
        self.admin_name_label.setGeometry(QtCore.QRect(20, 300, 400, 31)) 
        self.admin_name_label.setStyleSheet("QLabel {\n"
"    font-size: 28px; /* Размер шрифта */\n"
"    color: white; /* Белый цвет текста */\n"
"    font-family: \'Alumni Sans\'; /* Используем шрифт Alumni Sans */\n"
"    font-weight: bold; /* Жирный текст */\n"
"}\n"
"")
        self.admin_name_label.setObjectName("admin_name_label")

        # Кнопка REFRESH (в правом верхнем углу)
        self.refreshButton = QtWidgets.QPushButton(self.centralwidget)
        self.refreshButton.setGeometry(QtCore.QRect(410, 20, 100, 30))
        self.refreshButton.setStyleSheet(self.editclientsButton.styleSheet())
        self.refreshButton.setObjectName("refreshButton")
        self.refreshButton.setText("REFRESH")

        # Кнопка LOG OUT (рядом с REFRESH)
        self.logoutButton = QtWidgets.QPushButton(self.centralwidget)
        self.logoutButton.setGeometry(QtCore.QRect(30, 20, 100, 30))
        self.logoutButton.setStyleSheet(self.editclientsButton.styleSheet())
        self.logoutButton.setObjectName("logoutButton")
        self.logoutButton.setText("LOG OUT")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 536, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Admin Panel"))
        self.editclientsButton.setText(_translate("MainWindow", "EDIT CLIENTS"))
        self.mainpage_label.setText(_translate("MainWindow", "MAIN PAGE"))
        self.analyticButton.setText(_translate("MainWindow", "ANALYTIC"))
        self.editmovieButton.setText(_translate("MainWindow", "EDIT MOVIE"))
        self.reportButton.setText(_translate("MainWindow", "REPORT"))
        self.admin_name_label.setText(_translate("MainWindow", "admin:"))


